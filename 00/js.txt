what is js 

javascript -- 
programming lang 
interpreted lang 
which is used to make website do things -- like show pop ups, check your pass, play music, change color, requesting and sending data 


so -- 
html -- makes the structure 
css -- make it look pretty 
js --- brings life to it 

--- how does js runs ? 
computer they speaks in lang of 0 and 1 
so to interact our js with computer we need js engines -- 
one of this engine  is inside browsers

--- js engines 
v8 -- that is used by chrome node.js brave opera etc 
spidermonkey -- this is used by firefox(this is first ever js engine made in the world)
chakra -- edge , jscore nitro -- safari , hermes -- react native mobile apps 

MAIN POINT -- js is not browsers anymore 
in starting it was used only in browser but not anymore

it is used in some runtimes now 

1_ node.js 
used to make backend , v8

2_ deno 
v8, ts and modern use secure web3 

3_ bun 
jscore (nitro) , ultra fast 



----------------




QUESTIONS ---- 

console.log(a)
var a = 10 // 
shubham -- 10 
tridi -- ?? error ? konsa?  runtime error 


console.log(a)
let a = 10 
shubham -- 10 
tridi  --- undefined ? ? 


console.log(a)
const a = 10
shubham -- undefined
tridi --  undefined  \

 
------- 
HOISTING in JS 


hoisting -- means that variable and functions declaration are moved to the top of their scope before the code runs 

in js 2 things are hoisted ? 
1. variables 
2. functions 



--- functions 
are of 2 types -- nrmal and another one is arrow function 
hoisting doesnt work on arrow function 
hoisting works on nrmal function 
and it will give the result too 


-- variables 
var -- it will always give undefined 

because below variables come in TDZ --- temporal dead zone
let -- ReferenceError
const -- ReferenceError


now we are done with hoisting



-----------------------


console.log(typeof null)
shubham -- null
tridi --  object
////// bug h js me starting se


console.log([1,2] + 1)
shubham --  1,2,1 
tridi -- 

this is from the topic type coercion



----------------


type coercion
js automatically changes one type of data into another type to make the code work 


console.log("5" + 1)


2  types of type coercion

implicict and explicit 
implicict - js do it by itself   console.log(undefined + 1)
explicit -- you force it      console.log(Boolean(1)) 




-------------------------------------

console.log([] + [])
shubham -- null 
tridi -- ?? null 


console.log([] + {})
shubham -- ""
tridi -- "" 


console.log({} + [])