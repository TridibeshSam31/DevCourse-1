AWS NOTES HERE

What AWS Actually Is ?

Amazon Web Services (AWS) is a cloud computing platform that provides on-demand access to computing power, storage, and services ‚Äî all pay-as-you-go.
we can think aws as renting resource from amazon global infrastructure instead of owning physical servers

Core Cloud Concepts
basics before diving n
| Concept                    | Meaning                                            | Example                                    |
| -------------------------- | -------------------------------------------------- | ------------------------------------------ |
| **On-Demand Computing**    | Rent compute or storage as needed                  | Launch EC2 instances only when required    |
| **Scalability**            | Increase/decrease resources automatically          | Auto Scaling groups for web traffic spikes |
| **Elasticity**             | Pay only for what you use; release when not needed | S3 charges only for stored GBs             |
| **Fault Tolerance**        | System keeps running despite failure               | Deploy in multiple Availability Zones      |
| **High Availability (HA)** | System stays online with minimal downtime          | Load Balancer spreads traffic              |
| **Global Infrastructure**  | AWS has regions worldwide                          | India (ap-south-1), US East (us-east-1)    |


we will understand these terms like ec2 ,s3 etc in deep 

AWS Global Infrastructure
Understand this hierarchy early ‚Äî it‚Äôs critical:

Region ‚Üí Availability Zone (AZ) ‚Üí Data Center
Region: A geographical area (e.g., ap-south-1 = Mumbai).
Availability Zone (AZ): Physically separate data centers within a region (usually 3).

Edge Locations: For caching and CDN (used by CloudFront).

üí° Best Practice: Always deploy across multiple AZs for redundancy.


The 5 Core AWS Services we Must Know First
| Category       | Service                      | Description                                        |
| -------------- | ---------------------------- | -------------------------------------------------- |
| **Compute**    | EC2                          | Virtual servers on demand                          |
| **Storage**    | S3                           | Object storage for files, backups, static websites |
| **Database**   | RDS                          | Managed SQL databases (MySQL, PostgreSQL, etc.)    |
| **Networking** | VPC                          | Virtual private network for AWS resources          |
| **IAM**        | Identity & Access Management | Securely control access and permissions            |


These five form your foundation ‚Äî everything else builds on them.

IAM (Identity and Access Management)
You‚Äôll use this from day 1.
Users: Individual identities.
Groups: Collection of users.
Roles: Temporary permissions (used by services).
Policies: JSON documents that define permissions.

‚ö†Ô∏è Golden Rule:
Always follow the Principle of Least Privilege ‚Äî give only the permissions a user/service needs, nothing more.

6. EC2 Basics (Elastic Compute Cloud)

AWS‚Äôs core compute service (virtual machines).
You choose:
AMI (Amazon Machine Image) ‚Üí OS template
Instance Type ‚Üí CPU + RAM combo
Storage (EBS) ‚Üí Virtual disk
Security Group ‚Üí Firewall rules
üí° Think of EC2 as your virtual server running 24/7 on AWS.

S3 Basics (Simple Storage Service)

Object storage ‚Äî great for:
Backups
Static website hosting
File sharing

Key features:
Buckets ‚Üí containers for objects
Versioning ‚Üí track file changes
Lifecycle rules ‚Üí move old data to cheaper storage (like Glacier)

Public access control ‚Üí configure who can read/write



AWS Pricing Model

we pay for what we use ‚Äî but know the three pricing models:

| Model                  | Description                             | Example                           |
| ---------------------- | --------------------------------------- | --------------------------------- |
| **On-Demand**          | Pay per hour/second                     | Short-term workloads              |
| **Reserved Instances** | Commit 1‚Äì3 years for lower cost         | Predictable workloads             |
| **Spot Instances**     | Use unused capacity (up to 90% cheaper) | Flexible, interruptible workloads |



